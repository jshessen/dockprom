version: "3.7"
##############################
# NETWORKS
#
networks:
  default:
    name: monitor-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.64/27
#
##############################

##############################
# VOLUMES
#
volumes:
  prometheus_data: {}
  grafana_data: {}
#
##############################

##############################
# SECRETS (Non-Swarm)
#
secrets:
  caddy_admin:
    file: ./secrets/caddy_admin
  caddy_admin_pw:
    file: ./secrets/caddy_admin_pw
  caddy_admin_pw_hash:
    file: ./secrets/caddy_admin_pw_hash
  caddy_jwt_token_key:
    file: ./secrets/caddy_jwt_token_key
  grafana_admin:
    file: ./secrets/grafana_admin
  grafana_admin_pw:
    file: ./secrets/grafana_admin_pw
#
##############################

##############################
# SERVICES
#
services:
  ######################
  # MONITORING
  #
  ##########
  # Caddy 2 - a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go
  #
  caddy:
    #image: caddy:${CADDY_TAG}
    build: ${CONFIG_DIR}/caddy
    container_name: caddy
    depends_on:
      - prometheus
      - alertmanager
      - grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
    ports:
      - ${CADDY_HTTP_PORT}:80
      - ${CADDY_HTTPS_PORT}:443
      - ${CADDY_METRICS_PORT}:2019
      - ${GRAFANA_PORT}:3000
      - ${PROMETHEUS_PORT}:9090
      - ${ALERTMANAGER_PORT}:9093
    volumes:
      - ${CONFIG_DIR}/caddy:/etc/caddy
    secrets:
      - caddy_admin
      - caddy_admin_pw
      - caddy_admin_pw_hash
      - caddy_jwt_token_key
    environment:
      TZ: ${TZ}
      GRAFANA_PORT: ${GRAFANA_PORT}
      PROMETHEUS_PORT: ${PROMETHEUS_PORT}
      ALERTMANAGER_PORT: ${ALERTMANAGER_PORT}
      JWT_SHARED_KEY: /run/secrets/caddy_jwt_token_key
    labels:
      org.label-schema.group: "monitoring"
  #
  ##########
  
  ##########
  # Prometheus - open-source systems monitoring and alerting toolkit
  #
  prometheus:
    image: prom/prometheus:${PROMETHEUS_TAG}
    container_name: prometheus
    depends_on:
      - alertmanager
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
    volumes:
      - ${CONFIG_DIR}/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      #- '--web.external-url=http://catacomb:9090'
    environment:
      TZ: ${TZ}
    labels:
      org.label-schema.group: "monitoring"
  #
  ##########
  
  ##########
  # Alertmanager - handles alerts sent by client applications such as the Prometheus server.
  #
  alertmanager:
    image: prom/alertmanager:${ALERTMANAGER_TAG}
    container_name: alertmanager
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
    volumes:
      - ${CONFIG_DIR}/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--data.retention=1440h'
      #- '--web.external-url=http://catacomb:9093'
      - '--cluster.listen-address='
    environment:
      TZ: ${TZ}
    labels:
      org.label-schema.group: "monitoring"
  #
  ##########
  
  ##########
  # Grafana - is the open source analytics & monitoring solution for every database.
  #
  grafana:
    image: grafana/grafana:${GRAFANA_TAG}
    container_name: grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
    volumes:
      - grafana_data:/var/lib/grafana
      - ${CONFIG_DIR}/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ${CONFIG_DIR}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ${CONFIG_DIR}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    secrets:
      - grafana_admin
      - grafana_admin_pw
    environment:
      TZ: ${TZ}
      GF_SECURITY_ADMIN_USER__FILE: "/run/secrets/grafana_admin"
      GF_SECURITY_ADMIN_PASSWORD__FILE: "/run/secrets/grafana_admin_pw"
      GF_USERS_ALLOW_SIGN_UP: "false"
    labels:
      org.label-schema.group: "monitoring"
  #
  ##########
  #
  ####################
#
##############################
